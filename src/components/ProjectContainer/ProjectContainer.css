@import "../../constants/const.css";

.projectContainer {
	--mobile-content-width: 100%;
	--desktop-content-width: 65%;
	--project-container-transition: 0.3s ease;

	display: flex;
	flex-direction: column;
	min-height: 400px;
	gap: 15px;

	@media (max-width: $mobile-breakpoint) or (max-height: $mobile-breakpoint-vh) {
		position: static !important;
		display: flex;
		flex-direction: column;
		translate: 0% 0% !important;
		border-radius: var(--container-radius);
		padding: 10px 25px;
	}

	@media (min-width: $mobile-breakpoint) and (min-height: $mobile-breakpoint-vh) {
		position: sticky;
		top: 10svh;
		left: 0; 
		aspect-ratio: 16 / 9;
		max-width: 1140px;
	}

	& > * {
		transition: opacity var(--project-container-transition);
	}

	& > header {
		position: relative;
		display: flex;
		flex-direction: column;

		& > .action {
			position: absolute;
			top: 15px;
			right: 15px;
			opacity: 0;
			transition: opacity 0.2s ease;
		}

		& > .chipsWrapper {
			position: relative;
			width: fit-content;
		}

		& > .imageWrapper {
			border-radius: 14px;
			aspect-ratio: 16 / 9;
			
			& > img {
				border-radius: 10px;
				transition: mask-position var(--project-container-transition);
			}
		}

		& > *:not(.action, .imageWrapper) {
			transition: opacity var(--project-container-transition);
		}

		&:hover {
			& > .action {
				opacity: 1;
			}
		}

		&.hideProjectContent {
			& > .imageWrapper img {
				mask-position: bottom;
			}

			& > *:not(.action, .imageWrapper),
			& + main,
			& + main + footer {
				opacity: 0;
				user-select: none;
				pointer-events: none;
			}
		}

		@media (min-width: $mobile-breakpoint) and (min-height: $mobile-breakpoint-vh) {
			height: 25%;

			& > .imageWrapper {
				position: absolute;
				width: 100%;
				max-width: none;
				border: 1px solid var(--border);

				&::before {
					content: "";
					border-radius: 10px;
					position: absolute;
					inset: 0;
					background-color: var(--background);
					size: 100%;
					z-index: -1;
				}

				& > img {
					position: relative;
					top: 2px;
					left: -1px;
					width: 100%;
					max-height: 800px;
					mask-image: linear-gradient(140deg, transparent, var(--card) 66.66%);
					mask-size: 100% 200%;
					mask-position: top;
					mask-repeat: no-repeat;
				}
			}

			& > .titleWrapper {
				margin-left: 30px;
				width: fit-content;
				align-items: flex-start;
			}

			& > .chipsWrapper {
				margin-left: 30px;
			}
		}

		@media (max-width: $mobile-breakpoint) or (max-height: $mobile-breakpoint-vh) {
			& > .imageWrapper {
				& img {
					mask-image: linear-gradient(to bottom, transparent, var(--background) 33.33%);
					mask-repeat: no-repeat;
					mask-size: 100% 200%;
					mask-position: top;
				}

				&:hover img {
					mask-position: bottom;
				}
			}

			& > .titleWrapper {
				position: absolute;
				top: 0;
				left: 50%;
				translate: -50% 0%;
			}

			&:hover > .titleWrapper {
				opacity: 0;
			}

			& > .action {
				display: none !important;
			}

			& > .chipsWrapper {
				justify-content: center !important;
			}
		}
	}

	& > main {
		--expand-transition: 0.2s ease-in-out;

		position: relative;
		display: flex;
		flex-direction: column;
		justify-content: center;
		margin-left: 25px;
		height: fit-content;
		max-height: 50%;
		transition: all 0.3s ease-in-out;

		& > .card {
			border-radius: 20px;
			padding: 10px 10px 10px 20px;
			background-color: var(--card9) !important;
			transition: scale var(--expand-transition), top var(--expand-transition), translate var(--expand-transition), width var(--expand-transition), height var(--expand-transition), opacity var(--expand-transition);
		
			& .cardContent {
				& ul{
					list-style-type: disc !important;
					margin: 10px;
					padding: 10px;
				}
			}
		}

		@media (min-width: $mobile-breakpoint) and (min-height: $mobile-breakpoint-vh) {
			width: var(--desktop-content-width);

			& > .toggleWrapper {
				position: absolute;
				top: -10px;
				right: 0;
				scale: 0.8;
				translate: 0% -70%;
				transition: top var(--expand-transition), translate var(--expand-transition), right var(--expand-transition), bottom var(--expand-transition) ;
				z-index: calc(var(--on-top-index) + 1);
			}

			& .card.collapsable {
				position: absolute;
				width: 140% !important;
				background-color: var(--card) !important;

				&:not(.expanded) {
					top: 0%;
					opacity: 0 !important;
					pointer-events: none;
					user-select: none;
				}

				&.expanded {
					opacity: 1;
					top: -45%;
					height: 180%;
					z-index: var(--on-top-index);

					& ~ .card {
						opacity: 0 !important;
						scale: 1 2;

						& * {
							pointer-events: none;
							user-select: none;
						}
					}

					& ~ .toggleWrapper {
						top: -50%;
						right: -50%;
						translate: 0 0;
					}
				}
			}
		}
		@media (max-width: $mobile-breakpoint) or (max-height: $mobile-breakpoint-vh) {
			margin-left: 0px !important;
			/* height: clamp(150px, 60vw, 450px); */

			& > .card {
				padding: 10px !important;
				background-color: var(--background) !important;
				border: none !important;
			}

			& > .toggleWrapper, & .card.collapsable {
				display: none !important;
			}
		}
	}

	& > footer {
		display: flex;
		justify-content: space-around;

		height: 10%;
		@media (min-width: $mobile-breakpoint) and (min-height: $mobile-breakpoint-vh) {
			width: var(--desktop-content-width);
			align-items: center;
			gap: 20px;
		}
		@media (max-width: $mobile-breakpoint) or (max-height: $mobile-breakpoint-vh){}
	}
}
